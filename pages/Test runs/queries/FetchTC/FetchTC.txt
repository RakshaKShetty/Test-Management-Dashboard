SELECT  
		tc.case_id AS test_case_id,
		tc.name as test_case_name ,
    tc.description as tc_desc,
		tc.steps as tc_steps ,
		tc.automated_status as tc_autostatus, 
		tc.expected_results as tc_er,
		ARRAY_AGG(tlc.label_name) as tlc_label_name
		
FROM public.test_cases tc
LEFT JOIN public.test_run_cases trc
  ON tc.case_id = trc.case_id
  AND trc.run_id = {{data_tableCopy.selectedRow.run_id}} 
	
	INNER JOIN
    test_case_labels tlc
		ON tc.case_id = tlc.test_case_id
		
		 WHERE 
    ARRAY[{{JSObject1.queryTransform.data}}] = ARRAY['0'] 
		
    OR tlc.label_name = ANY(ARRAY[{{JSObject1.queryTransform.data}}])
		
	GROUP By tc.case_id , trc.case_id
ORDER BY 
  CASE 
    WHEN trc.case_id IS NOT NULL THEN 0 -- Cases already in the test run come first
    ELSE 1 -- Remaining cases come after
  END, 
  tc.case_id
	LIMIT {{this.params.limit}} OFFSET {{this.params.offset}}
		